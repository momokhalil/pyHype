from numba import float32, float64, int32
from pyHype.states.states import ConservativeState
from pyHype.input.input_file_builder import ProblemInput

_problem_input_type = ProblemInput.class_type.instance_type
#_conservativeclass_type = ConservativeState.class_type.instance_type

XDIR_EIGENSYSTEM_VECTORS_SPEC = [('inputs', _problem_input_type),
                                 ('A_d0', float64[:, :]),
                                 ('A_m1', float64[:, :]),
                                 ('A_m2', float64[:, :]),
                                 ('A_m3', float64[:, :]),
                                 ('A_p1', float64[:, :]),
                                 ('A_p2', float64[:, :]),
                                 ('X_d0', float64[:, :]),
                                 ('X_m1', float64[:, :]),
                                 ('X_m2', float64[:, :]),
                                 ('X_m3', float64[:, :]),
                                 ('X_p1', float64[:, :]),
                                 ('X_p2', float64[:, :]),
                                 ('Xi_d0', float64[:, :]),
                                 ('Xi_m1', float64[:, :]),
                                 ('Xi_m2', float64[:, :]),
                                 ('Xi_m3', float64[:, :]),
                                 ('Xi_p1', float64[:, :]),
                                 ('Xi_p2', float64[:, :]),
                                 ('Xi_p3', float64[:, :]),
                                 ('lam', float64[:, :])]

XDIR_EIGENSYSTEM_INDICES_SPEC = [('Ai', int32[:]),
                                 ('Aj', int32[:]),
                                 ('Xi', int32[:]),
                                 ('Xj', int32[:]),
                                 ('Xi_i', int32[:]),
                                 ('Xi_j', int32[:]),
                                 ('Li', int32[:]),
                                 ('Lj', int32[:])]

YDIR_EIGENSYSTEM_VECTORS_SPEC = [('inputs', _problem_input_type),
                                 ('B_d0', float64[:, :]),
                                 ('B_m1', float64[:, :]),
                                 ('B_m2', float64[:, :]),
                                 ('B_m3', float64[:, :]),
                                 ('B_p1', float64[:, :]),
                                 ('B_p2', float64[:, :]),
                                 ('X_d0', float64[:, :]),
                                 ('X_m1', float64[:, :]),
                                 ('X_m2', float64[:, :]),
                                 ('X_m3', float64[:, :]),
                                 ('X_p1', float64[:, :]),
                                 ('X_p2', float64[:, :]),
                                 ('Xi_d0', float64[:, :]),
                                 ('Xi_m1', float64[:, :]),
                                 ('Xi_m2', float64[:, :]),
                                 ('Xi_m3', float64[:, :]),
                                 ('Xi_p1', float64[:, :]),
                                 ('Xi_p2', float64[:, :]),
                                 ('Xi_p3', float64[:, :]),
                                 ('lam', float64[:, :])]

YDIR_EIGENSYSTEM_INDICES_SPEC = [('Bi', int32[:]),
                                 ('Bj', int32[:]),
                                 ('Xi', int32[:]),
                                 ('Xj', int32[:]),
                                 ('Xi_i', int32[:]),
                                 ('Xi_j', int32[:]),
                                 ('Li', int32[:]),
                                 ('Lj', int32[:])]

"""ROE_FLUX_X_SPEC = [('gh', float32),
                   ('gt', float32),
                   ('gb', float32),
                   ('g', float32),
                   ('_input', dict),
                   ('_L', ConservativeState.class_type.instance_type),
                   ('_R', ConservativeState),
                   ('A_d', float32[:]),
                   ('A_m1', float32[:]),
                   ('A_m2', float32[:]),
                   ('A_m3', float32[:]),
                   ('A_p1', float32[:]),
                   ('A_p2', float32[:]),
                   ('X_d', float32[:]),
                   ('X_m1', float32[:]),
                   ('X_m2', float32[:]),
                   ('X_m3', float32[:]),
                   ('X_p1', float32[:]),
                   ('X_p2', float32[:]),
                   ('Xi_d', float32[:]),
                   ('Xi_m1', float32[:]),
                   ('Xi_m2', float32[:]),
                   ('Xi_m3', float32[:]),
                   ('Xi_p1', float32[:]),
                   ('Xi_p2', float32[:]),
                   ('Xi_p3', float32[:])]"""
